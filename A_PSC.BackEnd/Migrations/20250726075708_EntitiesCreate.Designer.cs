// <auto-generated />
using System;
using A_PSC.BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace A_PSC.BackEnd.Migrations
{
    [DbContext(typeof(APSCContext))]
    [Migration("20250726075708_EntitiesCreate")]
    partial class EntitiesCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("A_PSC.BackEnd.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CareerId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacultyCoordinator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecondLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Agreement", b =>
                {
                    b.Property<int>("IdAgreement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgreement"));

                    b.Property<string>("CodeAgreement")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescriptionAgreement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EndDateAgreement")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("IdCooperatingEntityPer")
                        .HasColumnType("int");

                    b.Property<string>("LocationAgreement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameAgreement")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("StartDateAgreement")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdAgreement");

                    b.HasIndex("IdCooperatingEntityPer");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Annex", b =>
                {
                    b.Property<int>("IdAnnex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnnex"));

                    b.Property<string>("DescriptionAnnex")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileUrlAnnex")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeAnnex")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdAnnex");

                    b.ToTable("Annexes");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.BeneficiaryPopulation", b =>
                {
                    b.Property<int>("IdBeneficiaryPopulation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBeneficiaryPopulation"));

                    b.Property<int>("DirectBeneficiariesBeneficiaryPopulation")
                        .HasColumnType("int");

                    b.Property<int>("IndirectBeneficiariesBeneficiaryPopulation")
                        .HasColumnType("int");

                    b.Property<int>("MenBeneficiaryPopulation")
                        .HasColumnType("int");

                    b.Property<int>("TotalBeneficiaryPopulation")
                        .HasColumnType("int");

                    b.Property<int>("WomenBeneficiaryPopulation")
                        .HasColumnType("int");

                    b.HasKey("IdBeneficiaryPopulation");

                    b.ToTable("BeneficiaryPopulations");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Canton", b =>
                {
                    b.Property<int>("IdCanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCanton"));

                    b.Property<int>("IdProvincePer")
                        .HasColumnType("int");

                    b.Property<string>("NameCanton")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCanton");

                    b.HasIndex("IdProvincePer");

                    b.ToTable("Cantons");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.CooperatingEntity", b =>
                {
                    b.Property<int>("IdCooperatingEntity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCooperatingEntity"));

                    b.Property<string>("CodeCooperatingEntity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameCooperatingEntity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCooperatingEntity");

                    b.ToTable("CooperatingEntities");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.CooperatingEntityContribution", b =>
                {
                    b.Property<int>("IdCooperatingEntityContribution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCooperatingEntityContribution"));

                    b.Property<string>("DescriptionCooperatingEntityContribution")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCooperatingEntityPer")
                        .HasColumnType("int");

                    b.Property<decimal>("ValueCooperatingEntityContribution")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("IdCooperatingEntityContribution");

                    b.HasIndex("IdCooperatingEntityPer");

                    b.ToTable("CooperatingEntityContributions");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Parish", b =>
                {
                    b.Property<int>("IdParish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParish"));

                    b.Property<int>("IdCantonPer")
                        .HasColumnType("int");

                    b.Property<string>("NameParish")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdParish");

                    b.HasIndex("IdCantonPer");

                    b.ToTable("Parishes");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("CodeProduct")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescriptionProduct")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GoalProduct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IndicatorProduct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.ProjectActivity", b =>
                {
                    b.Property<int>("IdProjectActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjectActivity"));

                    b.Property<string>("DescriptionProjectActivity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDateProjectActivity")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProductPer")
                        .HasColumnType("int");

                    b.Property<int>("IdSpecificObjectivePer")
                        .HasColumnType("int");

                    b.Property<string>("ObservationsProjectActivity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDateProjectActivity")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentHoursProjectActivity")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherHoursProjectActivity")
                        .HasColumnType("int");

                    b.Property<string>("WeekProjectActivity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdProjectActivity");

                    b.HasIndex("IdProductPer");

                    b.HasIndex("IdSpecificObjectivePer");

                    b.ToTable("ProjectActivities");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Province", b =>
                {
                    b.Property<int>("IdProvince")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvince"));

                    b.Property<string>("NameProvince")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdProvince");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.RepresentativeBeneficiary", b =>
                {
                    b.Property<int>("IdRepresentativeBeneficiary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRepresentativeBeneficiary"));

                    b.Property<int>("IdCooperatingEntityPer")
                        .HasColumnType("int");

                    b.Property<string>("RepresentativeBeneficiaryEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RepresentativeBeneficiaryName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("RepresentativeBeneficiaryPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RepresentativeBeneficiaryPosition")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdRepresentativeBeneficiary");

                    b.HasIndex("IdCooperatingEntityPer");

                    b.ToTable("RepresentativeBeneficiaries");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.SpecificObjective", b =>
                {
                    b.Property<int>("IdSpecificObjective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSpecificObjective"));

                    b.Property<string>("DescriptionSpecificObjective")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GoalSpecificObjective")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IndicatorSpecificObjective")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSpecificObjective");

                    b.ToTable("SpecificObjectives");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Agreement", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.CooperatingEntity", "CooperatingEntity")
                        .WithMany()
                        .HasForeignKey("IdCooperatingEntityPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CooperatingEntity");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Canton", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.Province", "Province")
                        .WithMany("Cantons")
                        .HasForeignKey("IdProvincePer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.CooperatingEntityContribution", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.CooperatingEntity", "CooperatingEntity")
                        .WithMany("Contributions")
                        .HasForeignKey("IdCooperatingEntityPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CooperatingEntity");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Parish", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.Canton", "Canton")
                        .WithMany("Parishes")
                        .HasForeignKey("IdCantonPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.ProjectActivity", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.Product", "Product")
                        .WithMany("ProjectActivities")
                        .HasForeignKey("IdProductPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A_PSC.Shared.Entities.SpecificObjective", "SpecificObjective")
                        .WithMany("ProjectActivities")
                        .HasForeignKey("IdSpecificObjectivePer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SpecificObjective");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.RepresentativeBeneficiary", b =>
                {
                    b.HasOne("A_PSC.Shared.Entities.CooperatingEntity", "CooperatingEntity")
                        .WithMany()
                        .HasForeignKey("IdCooperatingEntityPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CooperatingEntity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("A_PSC.BackEnd.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("A_PSC.BackEnd.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A_PSC.BackEnd.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("A_PSC.BackEnd.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Canton", b =>
                {
                    b.Navigation("Parishes");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.CooperatingEntity", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Product", b =>
                {
                    b.Navigation("ProjectActivities");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.Province", b =>
                {
                    b.Navigation("Cantons");
                });

            modelBuilder.Entity("A_PSC.Shared.Entities.SpecificObjective", b =>
                {
                    b.Navigation("ProjectActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
